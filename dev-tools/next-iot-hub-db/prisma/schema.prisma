generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model authtokens {
  niceId      Int    @default(autoincrement())
  id          String @id
  description String @db.VarChar(200)

  projects  projects @relation(fields: [projectId], references: [id])
  projectId Int
  user      users?   @relation(fields: [userId], references: [id])
  userId    String?  @db.Uuid
  @@unique([id, niceId])
}

model categories {
  id          Int           @id @default(autoincrement())
  name        categoryNames
  description String        @db.VarChar(200)
  projects    projects[]
}

model devices {
  id         Int       @id @default(autoincrement())
  externalId String    @db.VarChar(20)
  name       String?   @db.VarChar(20)
  projects   projects  @relation(fields: [projectId], references: [id])
  projectId  Int
  records    records[]
  user       users?    @relation(fields: [userId], references: [id])
  userId     String?   @db.Uuid
}

model projects {
  id          Int             @id @default(autoincrement())
  name        String          @db.VarChar(50)
  description String?         @db.VarChar(200)
  createdAt   DateTime        @default(now()) @db.Timestamptz
  connectype  connectionTypes @default(ttn)
  location    String?         @db.VarChar(20)
  user        users           @relation(fields: [userId], references: [id])
  userId      String          @db.Uuid
  category    categories      @relation(fields: [categoryId], references: [id])
  categoryId  Int
  devices     devices[]
  authtoken   authtokens?
}

model records {
  id           Int      @id @default(autoincrement())
  recordedAt   DateTime @db.Timestamptz
  measurements Float[]
  longitude    Float?   @db.Real
  latitude     Float?   @db.Real
  altitude     Float?   @db.Real
  device       devices  @relation(fields: [deviceId], references: [id])
  deviceId     Int
}

model users {
  id         String       @id @db.Uuid
  name       String?      @unique @db.VarChar(20)
  createdAt  DateTime     @default(now()) @db.Timestamptz
  role       Role?        @default(maker)
  projects   projects[]
  devices    devices[]
  authtokens authtokens[]
}

enum categoryNames {
  temp        @map("Temperatur")
  co2         @map("CO2")
  humidity    @map("Luftfeuchtigkeit")
  pressure    @map("Druck")
  paxcounter  @map("PAXCounter")
  volume      @map("Lautst√§rke")
}

enum connectionTypes {
  ttn
  other
}

enum Role {
  maker
}
